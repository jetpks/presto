#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
export EDITOR=vim
# Shortcuts
alias copyssh="pbcopy < $HOME/.ssh/hexagon.pub"
alias reloadcli="source $HOME/.zshrc"
alias flushdns="dscacheutil -flushcache && sudo killall -HUP mDNSResponder"
alias ll="/usr/local/opt/coreutils/libexec/gnubin/ls -ahlF --color --group-directories-first"
alias weather="curl -4 http://wttr.in"
alias shrug="echo '¯\_(ツ)_/¯' | pbcopy"
alias importhist='fc -RI'
alias gs='git status'
alias be='bundle exec'
alias lock="open ${HOME}/ic/.prefs/ScreenSaverEngine.app"

setopt bsd_echo

# Local bin directories before anything else
  export PATH="/usr/local/bin:/usr/local/sbin:$PATH"

# home/bin/
export PATH="$DOTFILES/bin:$PATH"

# make the shell behave right
bindkey \^U backward-kill-line
set -k
set -o clobber

# my date
function pdate {
  local dt=$(date '+%Y%b%e/%k.%M.%S')
  echo $dt:l | tr -d ' '
}

# notes
noteloc=${HOME}/ic/Documents/instructure/notes/
function note {
  local notefile="${noteloc}/$(pdate).md"
  local notedir=$(dirname $notefile)
  [ -d $notedir ] || mkdir $notedir
  subl $notefile
}

# chruby
#source /usr/local/share/chruby/chruby.sh
#source /usr/local/share/chruby/auto.sh
[[ $(uname) == "Darwin" ]] && chruby ruby-2.5.1

# dinghy
docker() {
  if [[ -z "$DINGHY_UP" ]] && dinghy status | grep -q stopped; then
    echo Bringing up your dinghy...
    dinghy up 2>&1 | pv -ptlw 44 -s 22 -N ' >> dinghy up' >/dev/null
    export DINGHY_UP=true
  fi

  if [[ -z "$DOCKER_HOST" ]]; then
    eval $(dinghy env)
    export DINGHY_UP=true
  fi

  /usr/local/bin/docker "$@"
}

# go
export GOPATH=${HOME}

# ssh key
# suppress jobs output
for key in pretzel curvy toolsmiths-key-safe; do
  ssh-add -qK ~/.ssh/${key} 2>/dev/null &!
done

# employed since
[[ -e "${HOME}/src/days-worked/days-worked.rb" ]] && ${HOME}/src/days-worked/days-worked.rb

# bin
export PATH="${PATH}:${HOME}/bin"

# utc time
function utc {
  TZ=UTC date
}

# vaulted refresh
vrefresh() {
  if [ -z "${VAULTED_ENV}" ]; then
    echo -n '>> No vaulted env set, use `vaulted shell <vault>` where vault is one of:'
    vaulted list
    return false
  fi

  echo ">> Refreshing ${VAULTED_ENV}"
  eval $(vaulted env "${VAULTED_ENV}")
}

# focus mode
focus_mode() {
  echo "127.0.0.1 reddit.com www.reddit.com" | sudo tee -a /etc/hosts
    dscacheutil -flushcache
  }
# use GNU coreutils (actually don't because this breaks anything that detects Darwin)
#export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

## nvm
export NVM_DIR="$HOME/.nvm"
#. "/usr/local/opt/nvm/nvm.sh"
export PATH="/usr/local/opt/postgresql@9.6/bin:$PATH"

# local cloudgate
cgunstable() {
  if [ -z "$PRE_CG_UNSTABLE_PATH" ]; then
    local_cg_bin="$HOME/src/cloudgate/bin"

    export PRE_CG_UNSTABLE_PATH=$PATH
    export PATH="$local_cg_bin:$PATH"
  fi
}

cgstable() {
  if [ ! -z "$PRE_CG_UNSTABLE_PATH" ]; then
    export PATH="$PRE_CG_UNSTABLE_PATH"
    unset PRE_CG_UNSTABLE_PATH
  fi
}

# python3
export PATH=/usr/local/opt/python/libexec/bin:$PATH

# vault
export VAULT_ADDR=https://vault.insops.net
