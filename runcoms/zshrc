#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
#
#

function on_mac() {
  [[ $(uname) == "Darwin" ]]
}

# # BEFORE prezto
local ls_args='-alhF --color --group-directories-first'
if [[ -e "/usr/local/opt/coreutils/libexec/gnubin/ls" ]]; then
  alias ll="/usr/local/opt/coreutils/libexec/gnubin/ls ${ls_args}"
  alias ls="/usr/local/opt/coreutils/libexec/gnubin/ls"
else
  alias ll="ls ${ls_args}"
fi


#set -x
# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# cdpath
export CDPATH="${HOME}/src"
export EDITOR=vim

# Shortcuts
alias copyssh="pbcopy < $HOME/.ssh/hexagon.pub"
alias reloadcli="source $HOME/.zshrc"
alias flushdns="dscacheutil -flushcache && sudo killall -HUP mDNSResponder"
alias lock="open /System/Library/CoreServices/ScreenSaverEngine.app"

local ls_args='-alhF --color --group-directories-first'
if [[ -e "/usr/local/opt/coreutils/libexec/gnubin/ls" ]]; then
  alias ll="/usr/local/opt/coreutils/libexec/gnubin/ls ${ls_args}"
  alias ls="/usr/local/opt/coreutils/libexec/gnubin/ls"
else
  alias ll="ls ${ls_args}"
fi

setopt bsd_echo

# local bin directories first
export PATH="/usr/local/bin:/usr/local/sbin:$PATH"

# dotfiles/bin more first
export PATH="$DOTFILES/bin:$PATH"

# home/bin last
export PATH="${PATH}:${HOME}/bin"

# make ^U kill from the cursor to the beginning of the line
bindkey \^U backward-kill-line
set -k

# don't warn about overwriting files with redirection
set -o clobber

# my date
function pdate {
  local dt=$(date '+%Y%b%e/%k.%M.%S')
  echo $dt:l | tr -d ' '
}

# notes
noteloc=${HOME}/ic/Documents/instructure/notes/
function note {
  local notefile="${noteloc}/$(pdate).md"
  local notedir=$(dirname $notefile)
  [ -d $notedir ] || mkdir $notedir
  subl $notefile
}

# chruby
#source /usr/local/share/chruby/chruby.sh
#source /usr/local/share/chruby/auto.sh
on_mac && chruby ruby-2.7.1

# ruby
alias be='bundle exec'
alias beerspec='be rspec'

# go golang
export GOPATH=${HOME}
export GO111MODULE=on

# ssh key
# suppress jobs output
# for key in hydrogen pretzel curvy; do
#   if [[ -e "${HOME}/.ssh/${key}" ]]; then
#     ssh-add -qK ${HOME}/.ssh/${key} 2>/dev/null &!
#   fi
# done

# utc time
function utc {
  TZ=UTC date
}

# vaulted refresh
vrefresh() {
  if [ -z "${VAULTED_ENV}" ]; then
    echo -n '>> No vaulted env set, use `vaulted shell <vault>` where vault is one of:'
    vaulted list
    return false
  fi

  echo ">> Refreshing ${VAULTED_ENV}"
  eval $(vaulted env "${VAULTED_ENV}")
}

# use GNU coreutils (actually don't because this breaks anything that detects Darwin)
#export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

## nvm
export NVM_DIR="$HOME/.nvm"
#. "/usr/local/opt/nvm/nvm.sh"
export PATH="/usr/local/opt/postgresql@9.6/bin:$PATH"

# python3
export PATH="/usr/local/opt/python/libexec/bin:$PATH"
export PATH="/Users/ejacobs/Library/Python/3.7/bin:$PATH"

# vault
export VAULT_ADDR=https://vault.insops.net

# bat
export BAT_THEME="DarkNeon"

# zsh completions
fpath=(/usr/local/share/zsh-completions $fpath)

# broot
# on_mac && source /Users/ejacobs/Library/Preferences/org.dystroy.broot/launcher/bash/br

# Local RCs
for local_rc in ${HOME}/.zprezto/.local/*; do
  source "${local_rc}"
done

# rapture
[[ -e ${HOME}/bin/rapture ]] && eval "$( command rapture shell-init )"

# krew
[[ -d "${HOME}/.krew/bin" ]] && export PATH="${PATH}:${HOME}/.krew/bin"

# print the header (the first line of input)
# and then run the specified command on the body (the rest of the input)
# use it in a pipeline, e.g. ps | body grep somepattern
# https://unix.stackexchange.com/questions/11856/sort-but-keep-header-line-at-the-top
body() {
    IFS= read -r header
    printf '%s\n' "$header"
    "$@"
}

